{"mappings":"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","sources":["calculator.js"],"sourcesContent":["let list = new Map();\r\n\r\nlet utils = {}; //create a namespace for our utility functions\r\n\r\n//get function to make an HTTP GET request\r\nutils.get = (url) => {\r\n\r\n    //start promise object\r\n    return new Promise(function (resolve, reject) {\r\n\r\n        //create a new XMLHttpRequest object\r\n        let request = new XMLHttpRequest();\r\n\r\n        //initialize the request\r\n        request.open('GET', url);\r\n\r\n        request.onload = function () {\r\n            //resolve on success\r\n            if (request.status == 200) { // HTTP: OK\r\n                console.log('Response OK');\r\n                resolve(request.response);\r\n            }\r\n            //reject on error\r\n            else {\r\n                reject(Error(`promise error with ${request.status}`))\r\n            }\r\n        };\r\n        //handle network errors\r\n        request.onerror = function (error) {\r\n            reject(Error(`Network Error with ${url}: ${error}`))\r\n        };\r\n        //send the request\r\n        request.send();\r\n    }); //end Promise Object\r\n}\r\n\r\n//getJSON function to get JSON data from the server\r\nutils.getJSON = async function (url) {\r\n    let string = null;\r\n    //get the JSON string from the server\r\n    try {\r\n        string = await utils.get(url);\r\n    }\r\n    catch (error) {\r\n        console.log(error)\r\n    }\r\n    //parse the JSON string and return the data\r\n    let data = JSON.parse(string);\r\n    return data;\r\n}\r\n\r\nasync function init() {\r\n    //get the root element of the web page\r\n    let chooseCareers = document.querySelector('#chooseCareer');\r\n\r\n    //create a variable to hold the URL of the JSON data source\r\n    let url = 'https://api-demo.cartwebapp.com/data/2024';\r\n\r\n    //create a variable to hold the JSON data\r\n    let occupations = null;\r\n\r\n    //try to retrieve the JSON data from the server\r\n    try {\r\n        //retrieve the JSON data from the server\r\n        occupations = await utils.getJSON(url);\r\n    }\r\n    //catch any errors and display them in the root element\r\n    catch (error) {\r\n        chooseCareers.style.color = 'red';\r\n        chooseCareers.textContent = `error: ${error}`;\r\n    }\r\n\r\n    //show JSON data on the html page\r\n    buildList(occupations);\r\n\r\n}\r\n\r\nfunction buildList(jobs) {\r\n    //create an empty string to hold the HTML\r\n    let html = document.getElementById('chooseCareer');\r\n\r\n    //loop through the array of job objects retrieved from the JSON data\r\n    for (let job of jobs) {\r\n        // list.set(job.occupation)\r\n        html.innerHTML += `<option value = \"${job.salary}\">${job.occupation}</option>`\r\n    }\r\n\r\n    //return completed html\r\n    return html;\r\n}\r\n\r\n//initialize the web page when the DOM is ready\r\ndocument.addEventListener('DOMContentLoaded', init());\r\n\r\n//change inside of salary box when option is selected\r\n\r\ndocument.addEventListener(\"input\", function(event) {\r\n    if (event.target.id !== 'chooseCareer') return;\r\n    let income = Math.round(((event.target.value * 0.6735) - 180) / 12);\r\n\r\n    document.getElementById('monthlyNetIncome').innerHTML = `<p>${income}</p>`;\r\n});\r\n\r\ndocument.addEventListener(\"input\", function(event) {\r\n    if (event.target.id !== 'userInput') return;\r\n\r\n    console.log(\"works\");\r\n    let housing = document.getElementById('Housing').value;\r\n    let utilities = document.getElementById('Utilities');\r\n    let transport = document.getElementById('Transportation');\r\n    let food = document.getElementById('Food');\r\n    let debt = document.getElementById('Debt');\r\n    let clothing = document.getElementById('Clothing');\r\n    let entertainment = document.getElementById('Entertainment');\r\n    let savings = document.getElementById('Savings');\r\n\r\n    let difference = income - housing - utilities - transport - food - debt - clothing - entertainment - savings;\r\n\r\n    document.getElementById('budgetDifference').innerHTML = `<p>${difference}</p>`;\r\n});"],"names":[],"version":3,"file":"index.c615aead.js.map","sourceRoot":"/__parcel_source_root/"}